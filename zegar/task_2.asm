;PSEUDONIMY DESKRYPTORÓW
.386P
INCLUDE STRUKT.TXT
DANE	SEGMENT USE16
;Globalna tablica deskryptorów
GDT_0		LABEL WORD
  GDT_NULL	DESKR <>
  GDT_DANE	DESKR <DANE_SIZE-1,,,92H>	;8
  GDT_PROGRAM	DESKR <PROGRAM_SIZE-1,,,9AH>	;16 Atrybut 9Ah (kopiowanie !!!)
  GDT_STOS	DESKR <255,0,0,92H,0,0>		;24
  GDT_EKRAN	DESKR <4095,8000H,0BH,92H>	;32
  GDT_HIMEM	DESKR <4095,0,20H,92H,80H,0>	;40
  GDT_TSS_0	DESKR <103,0,0,89H>		;48
  GDT_TSS_1	DESKR <103,0,0,89H>		;56
  GDT_HM_LOAD	DESKR <0FFFFH,0,30H,92H>	;64
  GDT_HM_TASK	DESKR <0FFFFH,0,30H,98H>	;72
GDT_SIZE=$-GDT_0
;Tablica deskryptorów przerwañ
IDT		LABEL WORD
INCLUDE PM_IDT.TXT
IDT_SIZE=$-IDT
PDESKR		DQ	0	;Pseudodeskryptor
ORG_IDT		DQ	0
REAL_SP		DW	0	;WskaŸnik stosu dla trybu REAL
REAL_SS		DW	0	;
INCLUDE PM_DATA.TXT
INFO		DB 'POWROT Z TRYBU CHRONIONEGO $'
INFO1		DB 'PRZELACZENIE W TRYB PROTECTED $'
T1		DB 'ZADANIE PIERWOTNE PRZED PRZELACZENIEM ZADANIA'
T2		DB 'ZADANIE ZAGNIEZDZONE W PAMIECI ROZSZERZONEJ'
T3		DB 'ZADANIE PIERWOTNE PO POWROCIE Z ZADANIA ZAGNIEZDZONEGO'
TSS_0		DB 104	DUP(0)
TSS_1		DB 104 	DUP(0)
TASK0_OFFS	DW	0
TASK0_SEL	DW	48
TASK1_OFFS	DW	0	;4-bajtowy adres dla prze³¹czenia
TASK1_SEL	DW	56	;na zadanie 1 przez TSS_1
A20     	DB 0
FAST_A20 	DB 0
DANE_SIZE=$-GDT_0
DANE	ENDS

PROGRAM	SEGMENT 'CODE'USE16
	ASSUME CS:PROGRAM,DS:DANE
BEGIN	LABEL WORD
INCLUDE PM_EXC.TXT
INCLUDE MAKRA.TXT
MAIN	PROC
	CZY_DOSTEPNY_FAST_A20
	INICJOWANIE_DESKRYPTOROW
  	A20_ON
	PM_TSS0_I_TSS1 TSS_0,TSS_1,GDT_TSS_0,GDT_TSS_1
	MOV WORD PTR TSS_1+4CH,72	;CS
	MOV WORD PTR TSS_1+20H,0	;IP
	MOV WORD PTR TSS_1+50H,64	;SS
	MOV WORD PTR TSS_1+38H,0FFF0H	;SP
	MOV WORD PTR TSS_1+54H,8	;DS
	MOV WORD PTR TSS_1+48H,32	;ES
	MOV WORD PTR TSS_1+5CH,40	;GS
	MOV AH,9
	MOV DX,OFFSET INFO1
	INT 21H
	CLI
	INICJACJA_IDTR
	AKTYWACJA_PM
	MOV AX,32
	MOV ES,AX
	MOV AX,40
	MOV GS,AX
	MOV FS,AX
	MOV AX,48
	LTR AX
;Kopiowanie procedury highmem do pamiêci rozszerzonej
	PUSH DS
	PUSH CS
	POP DS
	MOV SI,OFFSET HIGHMEM
	MOV AX,64
	MOV ES,AX
	MOV DI,0
	MOV CX,HM_SIZE
	REP MOVSB
	MOV AX,32
	MOV ES,AX
	POP DS
   	WYPISZ_N_ZNAKOW_Z_ATRYBUTEM T1,45,960,ATRYB
;	CALL DWORD PTR task1_offs
	JMP DWORD PTR task1_offs
   	WYPISZ_N_ZNAKOW_Z_ATRYBUTEM T3,54,1600,ATRYB
	MOV WORD PTR tss_1+20h,0
;	CALL DWORD PTR TASK1_OFFS
	JMP DWORD PTR TASK1_OFFS
	ETYKIETA_POWROTU_DO_RM:
	MIEKI_POWROT_RM
	POWROT_DO_RM 1,1
MAIN	ENDP

HIGHMEM	PROC
   	WYPISZ_N_ZNAKOW_Z_ATRYBUTEM T2,43,1280,ATRYB    
;	IRET
	JMP DWORD PTR task0_offs
HIGHMEM	ENDP
HM_SIZE=$-HIGHMEM
PROGRAM_SIZE=$-BEGIN
PROGRAM	ENDS

STK	SEGMENT STACK 'STACK'
	DB 256 DUP (0)
STK	ENDS

END	MAIN
